////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : EightBitAdder.vf
// /___/   /\     Timestamp : 08/13/2025 12:58:05
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog /home/ise/VB_duplicate/NewProject/EightBitAdder.vf -w /home/ise/VB_duplicate/NewProject/EightBitAdder.sch
//Design Name: EightBitAdder
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module FullAdder_MUSER_EightBitAdder(A, 
                                     B, 
                                     Cin, 
                                     Reset, 
                                     Cout, 
                                     Sum);

    input A;
    input B;
    input Cin;
    input Reset;
   output Cout;
   output Sum;
   
   wire XLXN_12;
   wire XLXN_13;
   wire XLXN_14;
   wire XLXN_25;
   wire XLXN_26;
   
   XOR3  XLXI_1 (.I0(Cin), 
                .I1(B), 
                .I2(A), 
                .O(XLXN_25));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(XLXN_12));
   AND2  XLXI_3 (.I0(Cin), 
                .I1(A), 
                .O(XLXN_13));
   AND2  XLXI_4 (.I0(Cin), 
                .I1(B), 
                .O(XLXN_14));
   OR3  XLXI_5 (.I0(XLXN_14), 
               .I1(XLXN_13), 
               .I2(XLXN_12), 
               .O(XLXN_26));
   AND2  XLXI_6 (.I0(Reset), 
                .I1(XLXN_25), 
                .O(Sum));
   AND2  XLXI_7 (.I0(XLXN_26), 
                .I1(Reset), 
                .O(Cout));
endmodule
`timescale 1ns / 1ps

module HalfAdder_MUSER_EightBitAdder(A, 
                                     B, 
                                     Reset, 
                                     Cout, 
                                     Sum);

    input A;
    input B;
    input Reset;
   output Cout;
   output Sum;
   
   wire XLXN_7;
   wire XLXN_8;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_7));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(XLXN_8));
   AND2  XLXI_3 (.I0(Reset), 
                .I1(XLXN_7), 
                .O(Sum));
   AND2  XLXI_4 (.I0(XLXN_8), 
                .I1(Reset), 
                .O(Cout));
endmodule
`timescale 1ns / 1ps

module EightBitAdder(A, 
                     B, 
                     Restart, 
                     Add, 
                     Cout);

    input [7:0] A;
    input [7:0] B;
    input Restart;
   output [7:0] Add;
   output Cout;
   
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_107;
   wire XLXN_111;
   wire XLXN_116;
   wire XLXN_118;
   
   HalfAdder_MUSER_EightBitAdder  XLXI_1 (.A(A[0]), 
                                         .B(B[0]), 
                                         .Reset(Restart), 
                                         .Cout(XLXN_4), 
                                         .Sum(Add[0]));
   FullAdder_MUSER_EightBitAdder  XLXI_2 (.A(A[1]), 
                                         .B(B[1]), 
                                         .Cin(XLXN_4), 
                                         .Reset(Restart), 
                                         .Cout(XLXN_5), 
                                         .Sum(Add[1]));
   FullAdder_MUSER_EightBitAdder  XLXI_3 (.A(A[2]), 
                                         .B(B[2]), 
                                         .Cin(XLXN_5), 
                                         .Reset(Restart), 
                                         .Cout(XLXN_6), 
                                         .Sum(Add[2]));
   FullAdder_MUSER_EightBitAdder  XLXI_4 (.A(A[3]), 
                                         .B(B[3]), 
                                         .Cin(XLXN_6), 
                                         .Reset(Restart), 
                                         .Cout(XLXN_107), 
                                         .Sum(Add[3]));
   FullAdder_MUSER_EightBitAdder  XLXI_17 (.A(A[4]), 
                                          .B(B[4]), 
                                          .Cin(XLXN_107), 
                                          .Reset(Restart), 
                                          .Cout(XLXN_111), 
                                          .Sum(Add[4]));
   FullAdder_MUSER_EightBitAdder  XLXI_18 (.A(A[5]), 
                                          .B(B[5]), 
                                          .Cin(XLXN_111), 
                                          .Reset(Restart), 
                                          .Cout(XLXN_116), 
                                          .Sum(Add[5]));
   FullAdder_MUSER_EightBitAdder  XLXI_19 (.A(A[6]), 
                                          .B(B[6]), 
                                          .Cin(XLXN_116), 
                                          .Reset(Restart), 
                                          .Cout(XLXN_118), 
                                          .Sum(Add[6]));
   FullAdder_MUSER_EightBitAdder  XLXI_27 (.A(A[7]), 
                                          .B(B[7]), 
                                          .Cin(XLXN_118), 
                                          .Reset(Restart), 
                                          .Cout(Cout), 
                                          .Sum(Add[7]));
endmodule
