////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : FourBit2sComplement.vf
// /___/   /\     Timestamp : 08/13/2025 11:55:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog /home/ise/VB_duplicate/NewProject/FourBit2sComplement.vf -w /home/ise/VB_duplicate/NewProject/FourBit2sComplement.sch
//Design Name: FourBit2sComplement
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module HalfAdder_MUSER_FourBit2sComplement(A, 
                                           B, 
                                           Reset, 
                                           Cout, 
                                           Sum);

    input A;
    input B;
    input Reset;
   output Cout;
   output Sum;
   
   wire XLXN_7;
   wire XLXN_8;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_7));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(XLXN_8));
   AND2  XLXI_3 (.I0(Reset), 
                .I1(XLXN_7), 
                .O(Sum));
   AND2  XLXI_4 (.I0(XLXN_8), 
                .I1(Reset), 
                .O(Cout));
endmodule
`timescale 1ns / 1ps

module FourBit2sComplement(A, 
                           Reset, 
                           Ab, 
                           Comp, 
                           Cout, 
                           X);

    input [3:0] A;
    input Reset;
   output [3:0] Ab;
   output [3:0] Comp;
   output Cout;
   output [3:0] X;
   
   wire XLXN_9;
   wire XLXN_17;
   wire XLXN_21;
   wire XLXN_23;
   wire [3:0] Ab_DUMMY;
   
   assign Ab[3:0] = Ab_DUMMY[3:0];
   GND  Gnd_0 (.G(X[0]));
   GND  Gnd_1 (.G(X[1]));
   GND  Gnd_2 (.G(X[2]));
   GND  Gnd_3 (.G(X[3]));
   INV  inv_0 (.I(A[0]), 
              .O(Ab_DUMMY[0]));
   INV  inv_1 (.I(A[1]), 
              .O(Ab_DUMMY[1]));
   INV  inv_2 (.I(A[2]), 
              .O(Ab_DUMMY[2]));
   INV  inv_3 (.I(A[3]), 
              .O(Ab_DUMMY[3]));
   HalfAdder_MUSER_FourBit2sComplement  XLXI_5 (.A(Ab_DUMMY[0]), 
                                               .B(XLXN_9), 
                                               .Reset(Reset), 
                                               .Cout(XLXN_17), 
                                               .Sum(Comp[0]));
   VCC  XLXI_9 (.P(XLXN_9));
   HalfAdder_MUSER_FourBit2sComplement  XLXI_10 (.A(Ab_DUMMY[1]), 
                                                .B(XLXN_17), 
                                                .Reset(Reset), 
                                                .Cout(XLXN_21), 
                                                .Sum(Comp[1]));
   HalfAdder_MUSER_FourBit2sComplement  XLXI_11 (.A(Ab_DUMMY[2]), 
                                                .B(XLXN_21), 
                                                .Reset(Reset), 
                                                .Cout(XLXN_23), 
                                                .Sum(Comp[2]));
   HalfAdder_MUSER_FourBit2sComplement  XLXI_12 (.A(Ab_DUMMY[3]), 
                                                .B(XLXN_23), 
                                                .Reset(Reset), 
                                                .Cout(Cout), 
                                                .Sum(Comp[3]));
endmodule
