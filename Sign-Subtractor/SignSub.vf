////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : SignSub.vf
// /___/   /\     Timestamp : 08/15/2025 12:14:50
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family artix7 -verilog /home/ise/VB_duplicate/Basic/SignSub.vf -w /home/ise/VB_duplicate/Basic/SignSub.sch
//Design Name: SignSub
//Device: artix7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module TwotoOne8BitMux_MUSER_SignSub(A, 
                                     B, 
                                     E, 
                                     S, 
                                     M, 
                                     X);

    input [3:0] A;
    input [8:0] B;
    input E;
    input S;
   output [8:0] M;
   output [8:4] X;
   
   wire XLXN_3;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_72;
   wire XLXN_73;
   wire [8:4] X_DUMMY;
   
   assign X[8:4] = X_DUMMY[8:4];
   GND  GND_4 (.G(X_DUMMY[4]));
   GND  GND_5 (.G(X_DUMMY[5]));
   GND  GND_6 (.G(X_DUMMY[6]));
   GND  GND_7 (.G(X_DUMMY[7]));
   GND  GND_8 (.G(X_DUMMY[8]));
   INV  XLXI_1 (.I(S), 
               .O(XLXN_3));
   AND3  XLXI_2 (.I0(XLXN_3), 
                .I1(E), 
                .I2(A[0]), 
                .O(XLXN_5));
   AND3  XLXI_3 (.I0(B[0]), 
                .I1(E), 
                .I2(S), 
                .O(XLXN_6));
   AND3  XLXI_4 (.I0(XLXN_3), 
                .I1(E), 
                .I2(A[1]), 
                .O(XLXN_16));
   AND3  XLXI_5 (.I0(B[1]), 
                .I1(E), 
                .I2(S), 
                .O(XLXN_17));
   AND3  XLXI_6 (.I0(XLXN_3), 
                .I1(E), 
                .I2(A[2]), 
                .O(XLXN_18));
   AND3  XLXI_7 (.I0(B[2]), 
                .I1(E), 
                .I2(S), 
                .O(XLXN_19));
   AND3  XLXI_8 (.I0(XLXN_3), 
                .I1(E), 
                .I2(A[3]), 
                .O(XLXN_41));
   AND3  XLXI_9 (.I0(B[3]), 
                .I1(E), 
                .I2(S), 
                .O(XLXN_42));
   AND3  XLXI_10 (.I0(XLXN_3), 
                 .I1(E), 
                 .I2(X_DUMMY[4]), 
                 .O(XLXN_43));
   AND3  XLXI_11 (.I0(B[4]), 
                 .I1(E), 
                 .I2(S), 
                 .O(XLXN_44));
   AND3  XLXI_12 (.I0(XLXN_3), 
                 .I1(E), 
                 .I2(X_DUMMY[5]), 
                 .O(XLXN_45));
   AND3  XLXI_13 (.I0(B[5]), 
                 .I1(E), 
                 .I2(S), 
                 .O(XLXN_46));
   OR2  XLXI_14 (.I0(XLXN_6), 
                .I1(XLXN_5), 
                .O(M[0]));
   AND3  XLXI_15 (.I0(XLXN_3), 
                 .I1(E), 
                 .I2(X_DUMMY[6]), 
                 .O(XLXN_47));
   AND3  XLXI_16 (.I0(B[6]), 
                 .I1(E), 
                 .I2(S), 
                 .O(XLXN_48));
   OR2  XLXI_17 (.I0(XLXN_17), 
                .I1(XLXN_16), 
                .O(M[1]));
   OR2  XLXI_18 (.I0(XLXN_19), 
                .I1(XLXN_18), 
                .O(M[2]));
   OR2  XLXI_19 (.I0(XLXN_42), 
                .I1(XLXN_41), 
                .O(M[3]));
   OR2  XLXI_20 (.I0(XLXN_44), 
                .I1(XLXN_43), 
                .O(M[4]));
   OR2  XLXI_29 (.I0(XLXN_46), 
                .I1(XLXN_45), 
                .O(M[5]));
   OR2  XLXI_30 (.I0(XLXN_48), 
                .I1(XLXN_47), 
                .O(M[6]));
   AND3  XLXI_31 (.I0(XLXN_3), 
                 .I1(E), 
                 .I2(X_DUMMY[7]), 
                 .O(XLXN_49));
   AND3  XLXI_32 (.I0(B[7]), 
                 .I1(E), 
                 .I2(S), 
                 .O(XLXN_50));
   OR2  XLXI_33 (.I0(XLXN_50), 
                .I1(XLXN_49), 
                .O(M[7]));
   AND3  XLXI_34 (.I0(XLXN_3), 
                 .I1(E), 
                 .I2(X_DUMMY[8]), 
                 .O(XLXN_72));
   AND3  XLXI_35 (.I0(B[8]), 
                 .I1(E), 
                 .I2(S), 
                 .O(XLXN_73));
   OR2  XLXI_36 (.I0(XLXN_73), 
                .I1(XLXN_72), 
                .O(M[8]));
endmodule
`timescale 1ns / 1ps

module FullSub_MUSER_SignSub(A, 
                             B, 
                             C, 
                             RESET, 
                             Bout, 
                             D);

    input A;
    input B;
    input C;
    input RESET;
   output Bout;
   output D;
   
   wire XLXN_4;
   wire XLXN_7;
   wire XLXN_17;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_26;
   wire XLXN_32;
   wire XLXN_33;
   
   AND2  XLXI_2 (.I0(RESET), 
                .I1(A), 
                .O(XLXN_7));
   AND2  XLXI_3 (.I0(B), 
                .I1(RESET), 
                .O(XLXN_4));
   AND2  XLXI_6 (.I0(RESET), 
                .I1(XLXN_24), 
                .O(D));
   AND2  XLXI_8 (.I0(XLXN_32), 
                .I1(RESET), 
                .O(Bout));
   AND2  XLXI_9 (.I0(RESET), 
                .I1(C), 
                .O(XLXN_17));
   AND2  XLXI_12 (.I0(XLXN_4), 
                 .I1(XLXN_33), 
                 .O(XLXN_26));
   AND2  XLXI_13 (.I0(XLXN_17), 
                 .I1(XLXN_24), 
                 .O(XLXN_25));
   OR2  XLXI_14 (.I0(XLXN_26), 
                .I1(XLXN_25), 
                .O(XLXN_32));
   XOR3  XLXI_15 (.I0(XLXN_17), 
                 .I1(XLXN_4), 
                 .I2(XLXN_7), 
                 .O(XLXN_24));
   INV  XLXI_16 (.I(XLXN_7), 
                .O(XLXN_33));
endmodule
`timescale 1ns / 1ps

module HalfSub_MUSER_SignSub(A, 
                             B, 
                             RESET, 
                             Bout, 
                             D);

    input A;
    input B;
    input RESET;
   output Bout;
   output D;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   
   AND2  XLXI_2 (.I0(RESET), 
                .I1(A), 
                .O(XLXN_7));
   AND2  XLXI_3 (.I0(B), 
                .I1(RESET), 
                .O(XLXN_4));
   INV  XLXI_4 (.I(XLXN_7), 
               .O(XLXN_3));
   AND2  XLXI_6 (.I0(RESET), 
                .I1(XLXN_6), 
                .O(D));
   AND2  XLXI_8 (.I0(XLXN_5), 
                .I1(RESET), 
                .O(Bout));
   XOR2  XLXI_9 (.I0(XLXN_4), 
                .I1(XLXN_7), 
                .O(XLXN_6));
   AND2  XLXI_10 (.I0(XLXN_4), 
                 .I1(XLXN_3), 
                 .O(XLXN_5));
endmodule
`timescale 1ns / 1ps

module EightBitSub2_MUSER_SignSub(Ain, 
                                  B, 
                                  RESET, 
                                  Cout, 
                                  D);

    input [8:0] Ain;
    input [8:0] B;
    input RESET;
   output Cout;
   output [8:0] D;
   
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_7;
   wire XLXN_30;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   
   HalfSub_MUSER_SignSub  XLXI_12 (.A(Ain[0]), 
                                  .B(B[0]), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_30), 
                                  .D(D[0]));
   FullSub_MUSER_SignSub  XLXI_13 (.A(Ain[1]), 
                                  .B(B[1]), 
                                  .C(XLXN_30), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_44), 
                                  .D(D[1]));
   FullSub_MUSER_SignSub  XLXI_14 (.A(Ain[2]), 
                                  .B(B[2]), 
                                  .C(XLXN_44), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_45), 
                                  .D(D[2]));
   FullSub_MUSER_SignSub  XLXI_15 (.A(Ain[3]), 
                                  .B(B[3]), 
                                  .C(XLXN_45), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_3), 
                                  .D(D[3]));
   FullSub_MUSER_SignSub  XLXI_16 (.A(Ain[4]), 
                                  .B(B[4]), 
                                  .C(XLXN_3), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_4), 
                                  .D(D[4]));
   FullSub_MUSER_SignSub  XLXI_17 (.A(Ain[5]), 
                                  .B(B[5]), 
                                  .C(XLXN_4), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_46), 
                                  .D(D[5]));
   FullSub_MUSER_SignSub  XLXI_18 (.A(Ain[6]), 
                                  .B(B[6]), 
                                  .C(XLXN_46), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_47), 
                                  .D(D[6]));
   FullSub_MUSER_SignSub  XLXI_19 (.A(Ain[7]), 
                                  .B(B[7]), 
                                  .C(XLXN_47), 
                                  .RESET(RESET), 
                                  .Bout(XLXN_7), 
                                  .D(D[7]));
   FullSub_MUSER_SignSub  XLXI_20 (.A(Ain[8]), 
                                  .B(B[8]), 
                                  .C(XLXN_7), 
                                  .RESET(RESET), 
                                  .Bout(Cout), 
                                  .D(D[8]));
endmodule
`timescale 1ns / 1ps

module HalfAdderwithReset_MUSER_SignSub(A, 
                                        B, 
                                        Reset, 
                                        Cout, 
                                        S);

    input A;
    input B;
    input Reset;
   output Cout;
   output S;
   
   wire XLXN_3;
   wire XLXN_4;
   
   XOR2  XLXI_1 (.I0(B), 
                .I1(A), 
                .O(XLXN_3));
   AND2  XLXI_2 (.I0(B), 
                .I1(A), 
                .O(XLXN_4));
   AND2  XLXI_3 (.I0(Reset), 
                .I1(XLXN_3), 
                .O(S));
   AND2  XLXI_4 (.I0(XLXN_4), 
                .I1(Reset), 
                .O(Cout));
endmodule
`timescale 1ns / 1ps

module NineBitTwosComplement_MUSER_SignSub(A, 
                                           RS0, 
                                           Ab, 
                                           Ac, 
                                           X);

    input [3:0] A;
    input RS0;
   output [3:0] Ab;
   output [8:0] Ac;
   output [8:4] X;
   
   wire [8:4] XLXN_8;
   wire XLXN_65;
   wire XLXN_73;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_84;
   wire XLXN_85;
   wire XLXN_86;
   wire XLXN_87;
   wire XLXN_88;
   wire [8:4] X_DUMMY;
   wire [3:0] Ab_DUMMY;
   
   assign Ab[3:0] = Ab_DUMMY[3:0];
   assign X[8:4] = X_DUMMY[8:4];
   GND  GND_4 (.G(XLXN_8[4]));
   GND  GND_5 (.G(XLXN_8[5]));
   GND  GND_6 (.G(XLXN_8[6]));
   GND  GND_7 (.G(XLXN_8[7]));
   GND  GND_8 (.G(XLXN_8[8]));
   INV  INV_0 (.I(A[0]), 
              .O(Ab_DUMMY[0]));
   INV  INV_1 (.I(A[1]), 
              .O(Ab_DUMMY[1]));
   INV  INV_2 (.I(A[2]), 
              .O(Ab_DUMMY[2]));
   INV  INV_3 (.I(A[3]), 
              .O(Ab_DUMMY[3]));
   INV  INV_4 (.I(XLXN_8[4]), 
              .O(X_DUMMY[4]));
   INV  INV_5 (.I(XLXN_8[5]), 
              .O(X_DUMMY[5]));
   INV  INV_6 (.I(XLXN_8[6]), 
              .O(X_DUMMY[6]));
   INV  INV_7 (.I(XLXN_8[7]), 
              .O(X_DUMMY[7]));
   INV  INV_8 (.I(XLXN_8[8]), 
              .O(X_DUMMY[8]));
   VCC  XLXI_32 (.P(XLXN_87));
   GND  XLXI_33 (.G(XLXN_88));
   VCC  XLXI_34 (.P(Ac[8]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_35 (.A(X_DUMMY[7]), 
                                             .B(XLXN_86), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_88), 
                                             .S(Ac[7]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_36 (.A(X_DUMMY[6]), 
                                             .B(XLXN_85), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_86), 
                                             .S(Ac[6]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_37 (.A(X_DUMMY[5]), 
                                             .B(XLXN_84), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_85), 
                                             .S(Ac[5]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_38 (.A(X_DUMMY[4]), 
                                             .B(XLXN_83), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_84), 
                                             .S(Ac[4]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_39 (.A(Ab_DUMMY[3]), 
                                             .B(XLXN_82), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_83), 
                                             .S(Ac[3]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_40 (.A(Ab_DUMMY[2]), 
                                             .B(XLXN_73), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_82), 
                                             .S(Ac[2]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_41 (.A(Ab_DUMMY[1]), 
                                             .B(XLXN_65), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_73), 
                                             .S(Ac[1]));
   HalfAdderwithReset_MUSER_SignSub  XLXI_42 (.A(Ab_DUMMY[0]), 
                                             .B(XLXN_87), 
                                             .Reset(RS0), 
                                             .Cout(XLXN_65), 
                                             .S(Ac[0]));
endmodule
`timescale 1ns / 1ps

module SignSub(A, 
               B, 
               Reset, 
               S0, 
               S1, 
               S);

    input [3:0] A;
    input [3:0] B;
    input Reset;
    input S0;
    input S1;
   output [8:0] S;
   
   wire [8:0] XLXN_1;
   wire [8:0] XLXN_4;
   wire [8:0] XLXN_16;
   wire [8:0] XLXN_17;
   
   NineBitTwosComplement_MUSER_SignSub  XLXI_1 (.A(A[3:0]), 
                                               .RS0(Reset), 
                                               .Ac(XLXN_1[8:0]));
   NineBitTwosComplement_MUSER_SignSub  XLXI_2 (.A(B[3:0]), 
                                               .RS0(Reset), 
                                               .Ac(XLXN_4[8:0]));
   EightBitSub2_MUSER_SignSub  XLXI_9 (.Ain(XLXN_16[8:0]), 
                                      .B(XLXN_17[8:0]), 
                                      .RESET(Reset), 
                                      .Cout(), 
                                      .D(S[8:0]));
   TwotoOne8BitMux_MUSER_SignSub  XLXI_10 (.A(A[3:0]), 
                                          .B(XLXN_1[8:0]), 
                                          .E(Reset), 
                                          .S(S0), 
                                          .M(XLXN_16[8:0]));
   TwotoOne8BitMux_MUSER_SignSub  XLXI_11 (.A(B[3:0]), 
                                          .B(XLXN_4[8:0]), 
                                          .E(Reset), 
                                          .S(S1), 
                                          .M(XLXN_17[8:0]));
endmodule
